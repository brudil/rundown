version: '3'
services:
#  hostapi:
#    build:
#      dockerfile: packages/host/Dockerfile
#      context: .
#    depends_on:
#      - postgres
#    environment:
#      DATABASE_URL: postgres://user:pass@postgres:5432/db
#      NODE_ENV: development
#      PORT: 3000
#    ports:
#      - "3000:3000"
#    expose:
#      - 3000
#    command: "yarn nodemon /app/lib/entry/api.js"
#    volumes:
#      - .:/app/
#      - /app/node_modules
#    networks:
#      - web
#  hostlive:
#    build:
#      dockerfile: packages/host/Dockerfile
#      context: .
#    depends_on:
#      - postgres
#    environment:
#      DATABASE_URL: postgres://user:pass@postgres:5432/db
#      NODE_ENV: development
#      PORT: 3001
#    ports:
#      - "3001:3001"
#    expose:
#      - 3001
#    command: "yarn nodemon /app/lib/entry/live.js"
#    volumes:
#      - .:/app/
#      - /app/node_modules
#    networks:
#      - web
#  proxy:
#    build: conf/haproxy
#    depends_on:
#      - hostapi
#      - hostlive
#    environment:
#      - BALANCE=leastconn
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    ports:
#      - 80:80
#    networks:
#      - web
#    deploy:
#      placement:
#        constraints: [node.role == manager]
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    expose:
      - 6379
  postgres:
    image: "postgres:12-alpine"
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    expose:
      - 5432
networks:
  web:
    driver: overlay
