type User {
  firstName: String
  lastName: String
  username: String
  id: Int
}

type Episode {
  title: String
  rundown: [RundownEntry]
}

type ScriptDocument {
  body: String
}

interface Orderable {
  position: Int
}

type RundownEntry implements Orderable {
  type: String
  slug: String
  estimatedDuration: Int
  position: Int
}

type Asset {
  resource: String
  fileSize: Int
  fileType: String
  uploader: User
}

type Sound {
  asset: Asset
  length: Int
  type: String
}

type Programme {
  title: String

  episodes: [Episode]
}

type Team {
  name: String

  members: [User]

  programmes: [Programme]
}

type Query {
  allTeams: [Team]
  allProgrammes: [Programme]

  episode(episodeId: Int): Episode
  programme(programmeId: Int): Programme
  team(teamId: Int): Team

  viewer: User
}

type LoginResponse {
  token: String
  user: User
}

type Mutation {
  login(username: String!, password: String!): LoginResponse
  createTeam(name: String!): Team
}

schema {
  query: Query
  mutation: Mutation
}
